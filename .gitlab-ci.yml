stages:
  - build
  - test

# Succeeds if no changes are suggested by gofmt -d .
gofmt:
  stage: test
  image: golang:1.22
  script: if gofmt -d . | grep . ; then false ; else true ; fi

staticcheck v0.5.1:
  stage: test
  image: golang:1.22
  script:
    - go install honnef.co/go/tools/cmd/staticcheck@v0.5.1
    - staticcheck ./...

compile go 1.22:
  stage: build
  image: golang:1.22
  script:
    - go build -v ./...

unittests:
  stage: test
  image: golang:1.22
  script:
    - go test -race -v ./...

coverage:
  stage: test
  image: golang:1.22
  script:
    - go test ./... -coverprofile=coverage.txt -covermode count
    - go install github.com/boumenot/gocover-cobertura@latest
    - gocover-cobertura < coverage.txt > coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

integration test:
  stage: test
  image: golang:1.22
  before_script:
    - apt-get update
    - apt-get install -qqy openssl openssh-client jq unzip file sbsigntool
  script:
    - make check

stboot integration:
  stage: test
  image: debian:bookworm-backports
  allow_failure: true
  before_script:
    - apt-get update
    - apt-get install -qqy -t bookworm-backports golang-1.22
    - apt-get install -qqy qemu-system-x86 wget parted mtools cpio dosfstools git unzip
    - export PATH=/usr/lib/go-1.22/bin:$PATH
  script:
    - git clone https://git.glasklar.is/system-transparency/core/stboot.git
    - cd stboot/integration && go work init && go work use . ../.. && ./qemu-boot-from-disk.sh
  artifacts:
    when: always
    paths:
      - stboot/integration/out/qemu.log
